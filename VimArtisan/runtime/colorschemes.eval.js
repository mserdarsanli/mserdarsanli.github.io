(function() {
var res = {};
  res['blue'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: blue';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(159), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(224), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(0), new TermColor(130));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(130));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(11), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(11), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(14), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(14), new TermColor(12));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(0), new TermColor(12));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(12), new TermColor(12));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(0), new TermColor(6));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(14), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(0), new TermColor(11));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(0), new TermColor(248));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(0), new TermColor(12));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(0), new TermColor(2));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(0), new TermColor(14));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(0), new TermColor(121));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(248), new TermColor(4));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(225), new TermColor(4));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(15), new TermColor(4));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(10), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(224), new TermColor(4));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(9), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(130));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromColor('Label', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Operator'] = SyntaxGroup.FromColor('Operator', new TermColor(224), new TermColor(4));
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(11), new TermColor(4));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(0), new TermColor(15));
res['syntax-groups']['cIf0'] = SyntaxGroup.FromColor('cIf0', new TermColor(248), new TermColor(-1));
return res;
} ())
;  res['darkblue'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: darkblue';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(6), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(4), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(14), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(81));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(4), new TermColor(248));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(15), new TermColor(4));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(81), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(10), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(10), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(12), new TermColor(248));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(0), new TermColor(248));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(0), new TermColor(248));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(81), new TermColor(248));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(81), new TermColor(248));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(9), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(11), new TermColor(0));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(242), new TermColor(0));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(242), new TermColor(0));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(13));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(14));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(1), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(11), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(10), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(9), new TermColor(4));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(248), new TermColor(0));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(0), new TermColor(11));
res['syntax-groups']['lCursor'] = SyntaxGroup.FromColor('lCursor', new TermColor(0), new TermColor(15));
return res;
} ())
;  res['default'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: default';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(4), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(4), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(-1), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(2), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(7));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(248));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(81));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(225));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(159));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(224));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(81));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(225));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(225));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(0), new TermColor(7));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(0));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(0), new TermColor(7));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(7));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(224));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(4), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(1), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(130), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(15), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['delek'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: delek';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(4), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(4), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(-1), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(2), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(11), new TermColor(12));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(0), new TermColor(12));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(248));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(81));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(225));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(159));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(224));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(81));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(225));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(225));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(15), new TermColor(4));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(0));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(0), new TermColor(7));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(7));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(224));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(1), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(224), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(12), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(15), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['lCursor'] = SyntaxGroup.FromColor('lCursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['desert'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: desert';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(2), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(4), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(6), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(7), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(11), new TermColor(10));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(248), new TermColor(12));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(130), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(3), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(10), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(242));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(3));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(242), new TermColor(-1));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(242), new TermColor(-1));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(4), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(1));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(3), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(242), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(7), new TermColor(1));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['elflord'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: elflord';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(159), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(121), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(242));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(224), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(14), new TermColor(242));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(11), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(121), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromColor('Function', new TermColor(15), new TermColor(-1));
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Repeat');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromColor('Repeat', new TermColor(15), new TermColor(-1));
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromColor('Operator', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['evening'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: evening';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(159), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(121), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(0));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(224), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(7));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(7));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(0));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(224), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(11), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(121), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(242), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(15), new TermColor(242));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['lCursor'] = SyntaxGroup.FromColor('lCursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['koehler'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: koehler';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(1), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(1), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(130), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(248), new TermColor(9));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(15), new TermColor(9));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(6), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(2), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(81), new TermColor(15));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(15), new TermColor(81));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(242));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(14), new TermColor(242));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(81), new TermColor(15));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(15), new TermColor(81));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(81), new TermColor(15));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(12), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(11), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(121), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(0));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(6), new TermColor(0));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(6));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Scrollbar'] = SyntaxGroup.FromColor('Scrollbar', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Menu'] = SyntaxGroup.FromColor('Menu', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['morning'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: morning';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(4), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(4), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(-1), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(2), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(248));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(248));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(81));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(225));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(159));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(224));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(81));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(225));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(225));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(0), new TermColor(7));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(0));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(0), new TermColor(7));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(248));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(224));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(4), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(1), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(130), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(7), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(0), new TermColor(7));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['lCursor'] = SyntaxGroup.FromColor('lCursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['murphy'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: murphy';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(159), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(121), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(242));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(224), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(14), new TermColor(242));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(224), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(121), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(224), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(159), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(11), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(121), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(121), new TermColor(0));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['pablo'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: pablo';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(3));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(121), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(11), new TermColor(12));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(242));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(224), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(14), new TermColor(242));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(8), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(3), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(10), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(4), new TermColor(3));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['peachpuff'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: peachpuff';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(4), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(4), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(4), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(7), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(-1), new TermColor(3));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(3), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(2), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(7));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(3));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(7));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(7));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(4), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(1));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(224));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(81));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(225));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(225));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(0), new TermColor(7));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(0));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(0), new TermColor(7));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(7));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(224));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(4), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(1), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(3), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(7), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(7), new TermColor(1));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(3));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['lCursor'] = SyntaxGroup.FromColor('lCursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['ron'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: ron';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(159), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(121), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(224), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(14), new TermColor(242));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(224), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(11), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(121), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromColor('Label', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Operator'] = SyntaxGroup.FromColor('Operator', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ShowMarksHL'] = SyntaxGroup.FromColor('ShowMarksHL', new TermColor(14), new TermColor(81));
res['syntax-groups']['cIf0'] = SyntaxGroup.FromColor('cIf0', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['diffOnly'] = SyntaxGroup.FromColor('diffOnly', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['shine'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: shine';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(224), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(11));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(121), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(7));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(224), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(7));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(7));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(224));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(81));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(225));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(225));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(0), new TermColor(7));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(0));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(0), new TermColor(7));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(7));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(224));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(242), new TermColor(15));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(224), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(2), new TermColor(15));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(7), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromColor('Number', new TermColor(224), new TermColor(15));
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromColor('StorageClass', new TermColor(9), new TermColor(15));
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromColor('SpecialChar', new TermColor(242), new TermColor(15));
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(0), new TermColor(15));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(10));
res['syntax-groups']['lCursor'] = SyntaxGroup.FromColor('lCursor', new TermColor(-1), new TermColor(-1));
return res;
} ())
;  res['slate'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: slate';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(2), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(6), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(7), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(11), new TermColor(10));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(248), new TermColor(12));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(2), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(130), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(3), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(10), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(242));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(3));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(248), new TermColor(242));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(7));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(4), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(1));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(81), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(2), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(7), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(7), new TermColor(1));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromColor('String', new TermColor(6), new TermColor(-1));
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromColor('Function', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromColor('Operator', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromColor('Include', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Define'] = SyntaxGroup.FromColor('Define', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromColor('Structure', new TermColor(10), new TermColor(-1));
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellErrors'] = SyntaxGroup.FromColor('SpellErrors', new TermColor(7), new TermColor(1));
return res;
} ())
;  res['torte'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: torte';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(81), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(159), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromColor('ErrorMsg', new TermColor(15), new TermColor(1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(9));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromColor('MoreMsg', new TermColor(121), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(11), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromColor('Question', new TermColor(121), new TermColor(-1));
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(12), new TermColor(15));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(225), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(-1), new TermColor(242));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromColor('WarningMsg', new TermColor(224), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(14), new TermColor(242));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(4));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(5));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(6));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(14), new TermColor(242));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(12));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(13));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(13));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(242), new TermColor(0));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(15));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(15), new TermColor(242));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(242));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(1));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(6));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(14), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(11), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(121), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(81), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(0), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromLink('Tag', 'Special');
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(7), new TermColor(0));
res['syntax-groups']['Cursor'] = SyntaxGroup.FromColor('Cursor', new TermColor(0), new TermColor(10));
return res;
} ())
;  res['zellner'] = (function() {
var res = {};
res['lang'] = 'Builtin Colorscheme: zellner';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(4), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(4), new TermColor(-1));
res['syntax-groups']['ErrorMsg'] = SyntaxGroup.FromLink('ErrorMsg', 'Visual');
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Search'] = SyntaxGroup.FromColor('Search', new TermColor(0), new TermColor(14));
res['syntax-groups']['MoreMsg'] = SyntaxGroup.FromLink('MoreMsg', 'Comment');
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['Question'] = SyntaxGroup.FromLink('Question', 'Comment');
res['syntax-groups']['StatusLine'] = SyntaxGroup.FromColor('StatusLine', new TermColor(11), new TermColor(242));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Visual'] = SyntaxGroup.FromColor('Visual', new TermColor(11), new TermColor(9));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WarningMsg'] = SyntaxGroup.FromLink('WarningMsg', 'ErrorMsg');
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(248));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(81));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(225));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(159));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(224));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(81));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(225));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(225));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(0), new TermColor(7));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(0));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(0), new TermColor(7));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(7));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(224));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Comment'] = SyntaxGroup.FromColor('Comment', new TermColor(9), new TermColor(-1));
res['syntax-groups']['Constant'] = SyntaxGroup.FromColor('Constant', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Special'] = SyntaxGroup.FromColor('Special', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Identifier'] = SyntaxGroup.FromColor('Identifier', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Statement'] = SyntaxGroup.FromColor('Statement', new TermColor(1), new TermColor(-1));
res['syntax-groups']['PreProc'] = SyntaxGroup.FromColor('PreProc', new TermColor(13), new TermColor(-1));
res['syntax-groups']['Type'] = SyntaxGroup.FromColor('Type', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(15), new TermColor(-1));
res['syntax-groups']['Error'] = SyntaxGroup.FromColor('Error', new TermColor(15), new TermColor(9));
res['syntax-groups']['Todo'] = SyntaxGroup.FromColor('Todo', new TermColor(0), new TermColor(11));
res['syntax-groups']['String'] = SyntaxGroup.FromLink('String', 'Constant');
res['syntax-groups']['Character'] = SyntaxGroup.FromLink('Character', 'Constant');
res['syntax-groups']['Number'] = SyntaxGroup.FromLink('Number', 'Constant');
res['syntax-groups']['Boolean'] = SyntaxGroup.FromLink('Boolean', 'Constant');
res['syntax-groups']['Float'] = SyntaxGroup.FromLink('Float', 'Number');
res['syntax-groups']['Function'] = SyntaxGroup.FromLink('Function', 'Identifier');
res['syntax-groups']['Conditional'] = SyntaxGroup.FromLink('Conditional', 'Statement');
res['syntax-groups']['Repeat'] = SyntaxGroup.FromLink('Repeat', 'Statement');
res['syntax-groups']['Label'] = SyntaxGroup.FromLink('Label', 'Statement');
res['syntax-groups']['Operator'] = SyntaxGroup.FromLink('Operator', 'Statement');
res['syntax-groups']['Keyword'] = SyntaxGroup.FromLink('Keyword', 'Statement');
res['syntax-groups']['Exception'] = SyntaxGroup.FromLink('Exception', 'Statement');
res['syntax-groups']['Include'] = SyntaxGroup.FromLink('Include', 'PreProc');
res['syntax-groups']['Define'] = SyntaxGroup.FromLink('Define', 'PreProc');
res['syntax-groups']['Macro'] = SyntaxGroup.FromLink('Macro', 'PreProc');
res['syntax-groups']['PreCondit'] = SyntaxGroup.FromLink('PreCondit', 'PreProc');
res['syntax-groups']['StorageClass'] = SyntaxGroup.FromLink('StorageClass', 'Type');
res['syntax-groups']['Structure'] = SyntaxGroup.FromLink('Structure', 'Type');
res['syntax-groups']['Typedef'] = SyntaxGroup.FromLink('Typedef', 'Type');
res['syntax-groups']['Tag'] = SyntaxGroup.FromColor('Tag', new TermColor(2), new TermColor(-1));
res['syntax-groups']['SpecialChar'] = SyntaxGroup.FromLink('SpecialChar', 'Special');
res['syntax-groups']['Delimiter'] = SyntaxGroup.FromLink('Delimiter', 'Special');
res['syntax-groups']['SpecialComment'] = SyntaxGroup.FromLink('SpecialComment', 'Special');
res['syntax-groups']['Debug'] = SyntaxGroup.FromLink('Debug', 'Special');
res['syntax-groups']['Normal'] = SyntaxGroup.FromColor('Normal', new TermColor(-1), new TermColor(-1));
return res;
} ())
;return res;
} ())
