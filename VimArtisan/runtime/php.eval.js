(function() {
var res = {};
res['lang-syntax'] = (function() {
var res = {};
res['lang'] = 'Rules for Lang: php';
res['syntax-groups'] = {};
res['syntax-groups']['SpecialKey'] = SyntaxGroup.FromColor('SpecialKey', new TermColor(4), new TermColor(-1));
res['syntax-groups']['NonText'] = SyntaxGroup.FromColor('NonText', new TermColor(12), new TermColor(-1));
res['syntax-groups']['Directory'] = SyntaxGroup.FromColor('Directory', new TermColor(4), new TermColor(-1));
res['syntax-groups']['IncSearch'] = SyntaxGroup.FromColor('IncSearch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ModeMsg'] = SyntaxGroup.FromColor('ModeMsg', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['LineNr'] = SyntaxGroup.FromColor('LineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['CursorLineNr'] = SyntaxGroup.FromColor('CursorLineNr', new TermColor(130), new TermColor(-1));
res['syntax-groups']['StatusLineNC'] = SyntaxGroup.FromColor('StatusLineNC', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['VertSplit'] = SyntaxGroup.FromColor('VertSplit', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['Title'] = SyntaxGroup.FromColor('Title', new TermColor(5), new TermColor(-1));
res['syntax-groups']['VisualNOS'] = SyntaxGroup.FromColor('VisualNOS', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['WildMenu'] = SyntaxGroup.FromColor('WildMenu', new TermColor(0), new TermColor(11));
res['syntax-groups']['Folded'] = SyntaxGroup.FromColor('Folded', new TermColor(4), new TermColor(248));
res['syntax-groups']['FoldColumn'] = SyntaxGroup.FromColor('FoldColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['DiffAdd'] = SyntaxGroup.FromColor('DiffAdd', new TermColor(-1), new TermColor(81));
res['syntax-groups']['DiffChange'] = SyntaxGroup.FromColor('DiffChange', new TermColor(-1), new TermColor(225));
res['syntax-groups']['DiffDelete'] = SyntaxGroup.FromColor('DiffDelete', new TermColor(12), new TermColor(159));
res['syntax-groups']['DiffText'] = SyntaxGroup.FromColor('DiffText', new TermColor(-1), new TermColor(9));
res['syntax-groups']['SignColumn'] = SyntaxGroup.FromColor('SignColumn', new TermColor(4), new TermColor(248));
res['syntax-groups']['Conceal'] = SyntaxGroup.FromColor('Conceal', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['SpellBad'] = SyntaxGroup.FromColor('SpellBad', new TermColor(-1), new TermColor(224));
res['syntax-groups']['SpellCap'] = SyntaxGroup.FromColor('SpellCap', new TermColor(-1), new TermColor(81));
res['syntax-groups']['SpellRare'] = SyntaxGroup.FromColor('SpellRare', new TermColor(-1), new TermColor(225));
res['syntax-groups']['SpellLocal'] = SyntaxGroup.FromColor('SpellLocal', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Pmenu'] = SyntaxGroup.FromColor('Pmenu', new TermColor(0), new TermColor(225));
res['syntax-groups']['PmenuSel'] = SyntaxGroup.FromColor('PmenuSel', new TermColor(0), new TermColor(7));
res['syntax-groups']['PmenuSbar'] = SyntaxGroup.FromColor('PmenuSbar', new TermColor(-1), new TermColor(248));
res['syntax-groups']['PmenuThumb'] = SyntaxGroup.FromColor('PmenuThumb', new TermColor(-1), new TermColor(0));
res['syntax-groups']['TabLine'] = SyntaxGroup.FromColor('TabLine', new TermColor(0), new TermColor(7));
res['syntax-groups']['TabLineSel'] = SyntaxGroup.FromColor('TabLineSel', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['TabLineFill'] = SyntaxGroup.FromColor('TabLineFill', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['CursorColumn'] = SyntaxGroup.FromColor('CursorColumn', new TermColor(-1), new TermColor(7));
res['syntax-groups']['CursorLine'] = SyntaxGroup.FromColor('CursorLine', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['ColorColumn'] = SyntaxGroup.FromColor('ColorColumn', new TermColor(-1), new TermColor(224));
res['syntax-groups']['MatchParen'] = SyntaxGroup.FromColor('MatchParen', new TermColor(-1), new TermColor(14));
res['syntax-groups']['Underlined'] = SyntaxGroup.FromColor('Underlined', new TermColor(5), new TermColor(-1));
res['syntax-groups']['Ignore'] = SyntaxGroup.FromColor('Ignore', new TermColor(15), new TermColor(-1));
res['syntax-groups']['htmlError'] = SyntaxGroup.FromLink('htmlError', 'Error');
res['syntax-groups']['htmlSpecialChar'] = SyntaxGroup.FromLink('htmlSpecialChar', 'Special');
res['syntax-groups']['javaScriptExpression'] = SyntaxGroup.FromLink('javaScriptExpression', 'javaScript');
res['syntax-groups']['htmlString'] = SyntaxGroup.FromLink('htmlString', 'String');
res['syntax-groups']['htmlValue'] = SyntaxGroup.FromLink('htmlValue', 'String');
res['syntax-groups']['htmlTagN'] = SyntaxGroup.FromColor('htmlTagN', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlTagError'] = SyntaxGroup.FromLink('htmlTagError', 'htmlError');
res['syntax-groups']['htmlEndTag'] = SyntaxGroup.FromLink('htmlEndTag', 'Identifier');
res['syntax-groups']['htmlArg'] = SyntaxGroup.FromLink('htmlArg', 'Type');
res['syntax-groups']['htmlEvent'] = SyntaxGroup.FromLink('htmlEvent', 'javaScript');
res['syntax-groups']['htmlCssDefinition'] = SyntaxGroup.FromLink('htmlCssDefinition', 'Special');
res['syntax-groups']['htmlTag'] = SyntaxGroup.FromLink('htmlTag', 'Function');
res['syntax-groups']['htmlTagName'] = SyntaxGroup.FromLink('htmlTagName', 'htmlStatement');
res['syntax-groups']['htmlSpecialTagName'] = SyntaxGroup.FromLink('htmlSpecialTagName', 'Exception');
res['syntax-groups']['htmlCommentPart'] = SyntaxGroup.FromLink('htmlCommentPart', 'Comment');
res['syntax-groups']['htmlCommentError'] = SyntaxGroup.FromLink('htmlCommentError', 'htmlError');
res['syntax-groups']['htmlComment'] = SyntaxGroup.FromLink('htmlComment', 'Comment');
res['syntax-groups']['htmlPreStmt'] = SyntaxGroup.FromLink('htmlPreStmt', 'PreProc');
res['syntax-groups']['htmlPreError'] = SyntaxGroup.FromLink('htmlPreError', 'Error');
res['syntax-groups']['htmlPreAttr'] = SyntaxGroup.FromLink('htmlPreAttr', 'String');
res['syntax-groups']['htmlPreProc'] = SyntaxGroup.FromLink('htmlPreProc', 'PreProc');
res['syntax-groups']['htmlPreProcAttrError'] = SyntaxGroup.FromLink('htmlPreProcAttrError', 'Error');
res['syntax-groups']['htmlPreProcAttrName'] = SyntaxGroup.FromLink('htmlPreProcAttrName', 'PreProc');
res['syntax-groups']['htmlLink'] = SyntaxGroup.FromLink('htmlLink', 'Underlined');
res['syntax-groups']['javaScript'] = SyntaxGroup.FromLink('javaScript', 'Special');
res['syntax-groups']['htmlBoldUnderline'] = SyntaxGroup.FromColor('htmlBoldUnderline', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlBoldItalic'] = SyntaxGroup.FromColor('htmlBoldItalic', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlBold'] = SyntaxGroup.FromColor('htmlBold', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlBoldUnderlineItalic'] = SyntaxGroup.FromColor('htmlBoldUnderlineItalic', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlBoldItalicUnderline'] = SyntaxGroup.FromLink('htmlBoldItalicUnderline', 'htmlBoldUnderlineItalic');
res['syntax-groups']['htmlUnderlineBold'] = SyntaxGroup.FromLink('htmlUnderlineBold', 'htmlBoldUnderline');
res['syntax-groups']['htmlUnderlineItalic'] = SyntaxGroup.FromColor('htmlUnderlineItalic', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlUnderline'] = SyntaxGroup.FromColor('htmlUnderline', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlUnderlineBoldItalic'] = SyntaxGroup.FromLink('htmlUnderlineBoldItalic', 'htmlBoldUnderlineItalic');
res['syntax-groups']['htmlUnderlineItalicBold'] = SyntaxGroup.FromLink('htmlUnderlineItalicBold', 'htmlBoldUnderlineItalic');
res['syntax-groups']['htmlItalicBold'] = SyntaxGroup.FromLink('htmlItalicBold', 'htmlBoldItalic');
res['syntax-groups']['htmlItalicUnderline'] = SyntaxGroup.FromLink('htmlItalicUnderline', 'htmlUnderlineItalic');
res['syntax-groups']['htmlItalic'] = SyntaxGroup.FromColor('htmlItalic', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlItalicBoldUnderline'] = SyntaxGroup.FromLink('htmlItalicBoldUnderline', 'htmlBoldUnderlineItalic');
res['syntax-groups']['htmlItalicUnderlineBold'] = SyntaxGroup.FromLink('htmlItalicUnderlineBold', 'htmlBoldUnderlineItalic');
res['syntax-groups']['htmlLeadingSpace'] = SyntaxGroup.FromLink('htmlLeadingSpace', 'None');
res['syntax-groups']['htmlH1'] = SyntaxGroup.FromLink('htmlH1', 'Title');
res['syntax-groups']['htmlH2'] = SyntaxGroup.FromLink('htmlH2', 'htmlH1');
res['syntax-groups']['htmlH3'] = SyntaxGroup.FromLink('htmlH3', 'htmlH2');
res['syntax-groups']['htmlH4'] = SyntaxGroup.FromLink('htmlH4', 'htmlH3');
res['syntax-groups']['htmlH5'] = SyntaxGroup.FromLink('htmlH5', 'htmlH4');
res['syntax-groups']['htmlH6'] = SyntaxGroup.FromLink('htmlH6', 'htmlH5');
res['syntax-groups']['htmlTitle'] = SyntaxGroup.FromLink('htmlTitle', 'Title');
res['syntax-groups']['cssStyle'] = SyntaxGroup.FromColor('cssStyle', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlHead'] = SyntaxGroup.FromLink('htmlHead', 'PreProc');
res['syntax-groups']['javaScriptCommentTodo'] = SyntaxGroup.FromLink('javaScriptCommentTodo', 'Todo');
res['syntax-groups']['javaScriptLineComment'] = SyntaxGroup.FromLink('javaScriptLineComment', 'Comment');
res['syntax-groups']['javaScriptCommentSkip'] = SyntaxGroup.FromColor('javaScriptCommentSkip', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['javaScriptComment'] = SyntaxGroup.FromLink('javaScriptComment', 'Comment');
res['syntax-groups']['javaScriptSpecial'] = SyntaxGroup.FromLink('javaScriptSpecial', 'Special');
res['syntax-groups']['javaScriptStringD'] = SyntaxGroup.FromLink('javaScriptStringD', 'String');
res['syntax-groups']['javaScriptStringS'] = SyntaxGroup.FromLink('javaScriptStringS', 'String');
res['syntax-groups']['javaScriptSpecialCharacter'] = SyntaxGroup.FromLink('javaScriptSpecialCharacter', 'javaScriptSpecial');
res['syntax-groups']['javaScriptNumber'] = SyntaxGroup.FromLink('javaScriptNumber', 'javaScriptValue');
res['syntax-groups']['javaScriptRegexpString'] = SyntaxGroup.FromLink('javaScriptRegexpString', 'String');
res['syntax-groups']['javaScriptConditional'] = SyntaxGroup.FromLink('javaScriptConditional', 'Conditional');
res['syntax-groups']['javaScriptRepeat'] = SyntaxGroup.FromLink('javaScriptRepeat', 'Repeat');
res['syntax-groups']['javaScriptBranch'] = SyntaxGroup.FromLink('javaScriptBranch', 'Conditional');
res['syntax-groups']['javaScriptOperator'] = SyntaxGroup.FromLink('javaScriptOperator', 'Operator');
res['syntax-groups']['javaScriptType'] = SyntaxGroup.FromLink('javaScriptType', 'Type');
res['syntax-groups']['javaScriptStatement'] = SyntaxGroup.FromLink('javaScriptStatement', 'Statement');
res['syntax-groups']['javaScriptBoolean'] = SyntaxGroup.FromLink('javaScriptBoolean', 'Boolean');
res['syntax-groups']['javaScriptNull'] = SyntaxGroup.FromLink('javaScriptNull', 'Keyword');
res['syntax-groups']['javaScriptIdentifier'] = SyntaxGroup.FromLink('javaScriptIdentifier', 'Identifier');
res['syntax-groups']['javaScriptLabel'] = SyntaxGroup.FromLink('javaScriptLabel', 'Label');
res['syntax-groups']['javaScriptException'] = SyntaxGroup.FromLink('javaScriptException', 'Exception');
res['syntax-groups']['javaScriptMessage'] = SyntaxGroup.FromLink('javaScriptMessage', 'Keyword');
res['syntax-groups']['javaScriptGlobal'] = SyntaxGroup.FromLink('javaScriptGlobal', 'Keyword');
res['syntax-groups']['javaScriptMember'] = SyntaxGroup.FromLink('javaScriptMember', 'Keyword');
res['syntax-groups']['javaScriptDeprecated'] = SyntaxGroup.FromLink('javaScriptDeprecated', 'Exception');
res['syntax-groups']['javaScriptReserved'] = SyntaxGroup.FromLink('javaScriptReserved', 'Keyword');
res['syntax-groups']['javaScriptFunction'] = SyntaxGroup.FromLink('javaScriptFunction', 'Function');
res['syntax-groups']['javaScriptBraces'] = SyntaxGroup.FromLink('javaScriptBraces', 'Function');
res['syntax-groups']['javaScriptParens'] = SyntaxGroup.FromColor('javaScriptParens', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['javaScriptCharacter'] = SyntaxGroup.FromLink('javaScriptCharacter', 'Character');
res['syntax-groups']['javaScriptValue'] = SyntaxGroup.FromColor('javaScriptValue', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['javaScriptError'] = SyntaxGroup.FromLink('javaScriptError', 'Error');
res['syntax-groups']['javaScrParenError'] = SyntaxGroup.FromLink('javaScrParenError', 'javaScriptError');
res['syntax-groups']['javaScriptDebug'] = SyntaxGroup.FromLink('javaScriptDebug', 'Debug');
res['syntax-groups']['javaScriptConstant'] = SyntaxGroup.FromLink('javaScriptConstant', 'Label');
res['syntax-groups']['htmlCssStyleComment'] = SyntaxGroup.FromLink('htmlCssStyleComment', 'Comment');
res['syntax-groups']['htmlScriptTag'] = SyntaxGroup.FromLink('htmlScriptTag', 'htmlTag');
res['syntax-groups']['htmlEventSQ'] = SyntaxGroup.FromLink('htmlEventSQ', 'htmlEvent');
res['syntax-groups']['htmlEventDQ'] = SyntaxGroup.FromLink('htmlEventDQ', 'htmlEvent');
res['syntax-groups']['vbConditional'] = SyntaxGroup.FromLink('vbConditional', 'Conditional');
res['syntax-groups']['vbOperator'] = SyntaxGroup.FromLink('vbOperator', 'Operator');
res['syntax-groups']['vbBoolean'] = SyntaxGroup.FromLink('vbBoolean', 'Boolean');
res['syntax-groups']['vbConst'] = SyntaxGroup.FromLink('vbConst', 'Constant');
res['syntax-groups']['vbRepeat'] = SyntaxGroup.FromLink('vbRepeat', 'Repeat');
res['syntax-groups']['vbEvents'] = SyntaxGroup.FromLink('vbEvents', 'Special');
res['syntax-groups']['vbFunction'] = SyntaxGroup.FromLink('vbFunction', 'Identifier');
res['syntax-groups']['vbMethods'] = SyntaxGroup.FromLink('vbMethods', 'PreProc');
res['syntax-groups']['vbStatement'] = SyntaxGroup.FromLink('vbStatement', 'Statement');
res['syntax-groups']['vbKeyword'] = SyntaxGroup.FromLink('vbKeyword', 'Statement');
res['syntax-groups']['vbTodo'] = SyntaxGroup.FromLink('vbTodo', 'Todo');
res['syntax-groups']['vbTypes'] = SyntaxGroup.FromLink('vbTypes', 'Type');
res['syntax-groups']['vbDefine'] = SyntaxGroup.FromLink('vbDefine', 'Constant');
res['syntax-groups']['vbNumber'] = SyntaxGroup.FromLink('vbNumber', 'Number');
res['syntax-groups']['vbFloat'] = SyntaxGroup.FromLink('vbFloat', 'Float');
res['syntax-groups']['vbString'] = SyntaxGroup.FromLink('vbString', 'String');
res['syntax-groups']['vbComment'] = SyntaxGroup.FromLink('vbComment', 'Comment');
res['syntax-groups']['vbLineNumber'] = SyntaxGroup.FromLink('vbLineNumber', 'Comment');
res['syntax-groups']['vbTypeSpecifier'] = SyntaxGroup.FromLink('vbTypeSpecifier', 'Type');
res['syntax-groups']['vbError'] = SyntaxGroup.FromLink('vbError', 'Error');
res['syntax-groups']['vbIdentifier'] = SyntaxGroup.FromLink('vbIdentifier', 'Identifier');
res['syntax-groups']['cssTagName'] = SyntaxGroup.FromLink('cssTagName', 'Statement');
res['syntax-groups']['cssSelectorOp'] = SyntaxGroup.FromLink('cssSelectorOp', 'Special');
res['syntax-groups']['cssSelectorOp2'] = SyntaxGroup.FromLink('cssSelectorOp2', 'Special');
res['syntax-groups']['cssUnicodeEscape'] = SyntaxGroup.FromLink('cssUnicodeEscape', 'Special');
res['syntax-groups']['cssStringQ'] = SyntaxGroup.FromLink('cssStringQ', 'String');
res['syntax-groups']['cssStringQQ'] = SyntaxGroup.FromLink('cssStringQQ', 'String');
res['syntax-groups']['cssAttributeSelector'] = SyntaxGroup.FromLink('cssAttributeSelector', 'String');
res['syntax-groups']['cssClassNameDot'] = SyntaxGroup.FromLink('cssClassNameDot', 'Function');
res['syntax-groups']['cssClassName'] = SyntaxGroup.FromLink('cssClassName', 'Function');
res['syntax-groups']['cssIdentifier'] = SyntaxGroup.FromLink('cssIdentifier', 'Function');
res['syntax-groups']['cssUnitDecorators'] = SyntaxGroup.FromLink('cssUnitDecorators', 'Number');
res['syntax-groups']['cssValueInteger'] = SyntaxGroup.FromLink('cssValueInteger', 'Number');
res['syntax-groups']['cssValueNumber'] = SyntaxGroup.FromLink('cssValueNumber', 'Number');
res['syntax-groups']['cssValueLength'] = SyntaxGroup.FromLink('cssValueLength', 'Number');
res['syntax-groups']['cssValueAngle'] = SyntaxGroup.FromLink('cssValueAngle', 'Number');
res['syntax-groups']['cssValueTime'] = SyntaxGroup.FromLink('cssValueTime', 'Number');
res['syntax-groups']['cssValueFrequency'] = SyntaxGroup.FromLink('cssValueFrequency', 'Number');
res['syntax-groups']['cssIncludeKeyword'] = SyntaxGroup.FromLink('cssIncludeKeyword', 'atKeyword');
res['syntax-groups']['cssMediaProp'] = SyntaxGroup.FromLink('cssMediaProp', 'cssProp');
res['syntax-groups']['cssMediaKeyword'] = SyntaxGroup.FromLink('cssMediaKeyword', 'Statement');
res['syntax-groups']['cssMediaAttr'] = SyntaxGroup.FromLink('cssMediaAttr', 'cssAttr');
res['syntax-groups']['cssVendor'] = SyntaxGroup.FromLink('cssVendor', 'Comment');
res['syntax-groups']['cssMediaType'] = SyntaxGroup.FromLink('cssMediaType', 'Special');
res['syntax-groups']['cssMediaComma'] = SyntaxGroup.FromLink('cssMediaComma', 'Normal');
res['syntax-groups']['cssComment'] = SyntaxGroup.FromLink('cssComment', 'Comment');
res['syntax-groups']['cssMediaBlock'] = SyntaxGroup.FromColor('cssMediaBlock', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssInclude'] = SyntaxGroup.FromLink('cssInclude', 'Include');
res['syntax-groups']['cssBraces'] = SyntaxGroup.FromLink('cssBraces', 'Function');
res['syntax-groups']['cssColor'] = SyntaxGroup.FromLink('cssColor', 'Constant');
res['syntax-groups']['cssURL'] = SyntaxGroup.FromLink('cssURL', 'String');
res['syntax-groups']['cssImportant'] = SyntaxGroup.FromLink('cssImportant', 'Special');
res['syntax-groups']['cssError'] = SyntaxGroup.FromLink('cssError', 'Error');
res['syntax-groups']['cssFunction'] = SyntaxGroup.FromLink('cssFunction', 'Constant');
res['syntax-groups']['cssDefinition'] = SyntaxGroup.FromColor('cssDefinition', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssPseudoClass'] = SyntaxGroup.FromColor('cssPseudoClass', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssPagePseudo'] = SyntaxGroup.FromLink('cssPagePseudo', 'PreProc');
res['syntax-groups']['cssPageWrap'] = SyntaxGroup.FromColor('cssPageWrap', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssPage'] = SyntaxGroup.FromLink('cssPage', 'atKeyword');
res['syntax-groups']['cssPageMargin'] = SyntaxGroup.FromLink('cssPageMargin', 'atKeyword');
res['syntax-groups']['cssPageProp'] = SyntaxGroup.FromLink('cssPageProp', 'cssProp');
res['syntax-groups']['cssAttrRegion'] = SyntaxGroup.FromColor('cssAttrRegion', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssHacks'] = SyntaxGroup.FromLink('cssHacks', 'Comment');
res['syntax-groups']['cssKeyFrameWrap'] = SyntaxGroup.FromColor('cssKeyFrameWrap', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssKeyFrame'] = SyntaxGroup.FromLink('cssKeyFrame', 'atKeyword');
res['syntax-groups']['cssKeyFrameSelector'] = SyntaxGroup.FromLink('cssKeyFrameSelector', 'Constant');
res['syntax-groups']['cssFontDescriptorBlock'] = SyntaxGroup.FromColor('cssFontDescriptorBlock', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssFontDescriptor'] = SyntaxGroup.FromLink('cssFontDescriptor', 'Special');
res['syntax-groups']['cssCommonAttr'] = SyntaxGroup.FromLink('cssCommonAttr', 'cssAttr');
res['syntax-groups']['cssFontDescriptorProp'] = SyntaxGroup.FromLink('cssFontDescriptorProp', 'cssProp');
res['syntax-groups']['cssFontDescriptorFunction'] = SyntaxGroup.FromLink('cssFontDescriptorFunction', 'Constant');
res['syntax-groups']['cssFontDescriptorAttr'] = SyntaxGroup.FromLink('cssFontDescriptorAttr', 'cssAttr');
res['syntax-groups']['cssNoise'] = SyntaxGroup.FromLink('cssNoise', 'Noise');
res['syntax-groups']['cssFunctionName'] = SyntaxGroup.FromLink('cssFunctionName', 'Function');
res['syntax-groups']['cssFunctionComma'] = SyntaxGroup.FromLink('cssFunctionComma', 'Function');
res['syntax-groups']['cssGradientAttr'] = SyntaxGroup.FromLink('cssGradientAttr', 'cssAttr');
res['syntax-groups']['cssAnimationProp'] = SyntaxGroup.FromLink('cssAnimationProp', 'cssProp');
res['syntax-groups']['cssAnimationAttr'] = SyntaxGroup.FromLink('cssAnimationAttr', 'cssAttr');
res['syntax-groups']['cssBackgroundProp'] = SyntaxGroup.FromLink('cssBackgroundProp', 'cssProp');
res['syntax-groups']['cssBackgroundAttr'] = SyntaxGroup.FromLink('cssBackgroundAttr', 'cssAttr');
res['syntax-groups']['cssBorderProp'] = SyntaxGroup.FromLink('cssBorderProp', 'cssProp');
res['syntax-groups']['cssBorderAttr'] = SyntaxGroup.FromLink('cssBorderAttr', 'cssAttr');
res['syntax-groups']['cssBoxProp'] = SyntaxGroup.FromLink('cssBoxProp', 'cssProp');
res['syntax-groups']['cssBoxAttr'] = SyntaxGroup.FromLink('cssBoxAttr', 'cssAttr');
res['syntax-groups']['cssColorProp'] = SyntaxGroup.FromLink('cssColorProp', 'cssProp');
res['syntax-groups']['cssDimensionProp'] = SyntaxGroup.FromLink('cssDimensionProp', 'cssProp');
res['syntax-groups']['cssFlexibleBoxProp'] = SyntaxGroup.FromLink('cssFlexibleBoxProp', 'cssProp');
res['syntax-groups']['cssFlexibleBoxAttr'] = SyntaxGroup.FromLink('cssFlexibleBoxAttr', 'cssAttr');
res['syntax-groups']['cssFontProp'] = SyntaxGroup.FromLink('cssFontProp', 'cssProp');
res['syntax-groups']['cssFontAttr'] = SyntaxGroup.FromLink('cssFontAttr', 'cssAttr');
res['syntax-groups']['cssMultiColumnProp'] = SyntaxGroup.FromLink('cssMultiColumnProp', 'cssProp');
res['syntax-groups']['cssMultiColumnAttr'] = SyntaxGroup.FromLink('cssMultiColumnAttr', 'cssAttr');
res['syntax-groups']['cssGeneratedContentProp'] = SyntaxGroup.FromLink('cssGeneratedContentProp', 'cssProp');
res['syntax-groups']['cssGeneratedContentAttr'] = SyntaxGroup.FromLink('cssGeneratedContentAttr', 'cssAttr');
res['syntax-groups']['cssGridProp'] = SyntaxGroup.FromLink('cssGridProp', 'cssProp');
res['syntax-groups']['cssHyerlinkProp'] = SyntaxGroup.FromLink('cssHyerlinkProp', 'cssProp');
res['syntax-groups']['cssListProp'] = SyntaxGroup.FromLink('cssListProp', 'cssProp');
res['syntax-groups']['cssListAttr'] = SyntaxGroup.FromLink('cssListAttr', 'cssAttr');
res['syntax-groups']['cssPositioningProp'] = SyntaxGroup.FromLink('cssPositioningProp', 'cssProp');
res['syntax-groups']['cssPositioningAttr'] = SyntaxGroup.FromLink('cssPositioningAttr', 'cssAttr');
res['syntax-groups']['cssPrintAttr'] = SyntaxGroup.FromLink('cssPrintAttr', 'cssAttr');
res['syntax-groups']['cssTableProp'] = SyntaxGroup.FromLink('cssTableProp', 'cssProp');
res['syntax-groups']['cssTableAttr'] = SyntaxGroup.FromLink('cssTableAttr', 'cssAttr');
res['syntax-groups']['cssTextProp'] = SyntaxGroup.FromLink('cssTextProp', 'cssProp');
res['syntax-groups']['cssTextAttr'] = SyntaxGroup.FromLink('cssTextAttr', 'cssAttr');
res['syntax-groups']['cssTransformProp'] = SyntaxGroup.FromLink('cssTransformProp', 'cssProp');
res['syntax-groups']['cssTransitionProp'] = SyntaxGroup.FromLink('cssTransitionProp', 'cssProp');
res['syntax-groups']['cssTransitionAttr'] = SyntaxGroup.FromLink('cssTransitionAttr', 'cssAttr');
res['syntax-groups']['cssUIProp'] = SyntaxGroup.FromLink('cssUIProp', 'cssProp');
res['syntax-groups']['cssUIAttr'] = SyntaxGroup.FromLink('cssUIAttr', 'cssAttr');
res['syntax-groups']['cssIEUIAttr'] = SyntaxGroup.FromLink('cssIEUIAttr', 'cssAttr');
res['syntax-groups']['cssIEUIProp'] = SyntaxGroup.FromLink('cssIEUIProp', 'cssProp');
res['syntax-groups']['cssAuralProp'] = SyntaxGroup.FromLink('cssAuralProp', 'cssProp');
res['syntax-groups']['cssAuralAttr'] = SyntaxGroup.FromLink('cssAuralAttr', 'cssAttr');
res['syntax-groups']['cssMobileTextProp'] = SyntaxGroup.FromLink('cssMobileTextProp', 'cssProp');
res['syntax-groups']['cssBraceError'] = SyntaxGroup.FromLink('cssBraceError', 'Error');
res['syntax-groups']['cssAttrComma'] = SyntaxGroup.FromLink('cssAttrComma', 'Special');
res['syntax-groups']['cssPseudoClassId'] = SyntaxGroup.FromLink('cssPseudoClassId', 'PreProc');
res['syntax-groups']['cssPseudoClassFn'] = SyntaxGroup.FromColor('cssPseudoClassFn', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssSpecialCharQQ'] = SyntaxGroup.FromColor('cssSpecialCharQQ', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssSpecialCharQ'] = SyntaxGroup.FromColor('cssSpecialCharQ', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssDeprecated'] = SyntaxGroup.FromLink('cssDeprecated', 'Error');
res['syntax-groups']['cssProp'] = SyntaxGroup.FromLink('cssProp', 'StorageClass');
res['syntax-groups']['cssContentForPagedMediaProp'] = SyntaxGroup.FromLink('cssContentForPagedMediaProp', 'cssProp');
res['syntax-groups']['cssLineboxProp'] = SyntaxGroup.FromLink('cssLineboxProp', 'cssProp');
res['syntax-groups']['cssMarqueeProp'] = SyntaxGroup.FromLink('cssMarqueeProp', 'cssProp');
res['syntax-groups']['cssPagedMediaProp'] = SyntaxGroup.FromLink('cssPagedMediaProp', 'cssProp');
res['syntax-groups']['cssPrintProp'] = SyntaxGroup.FromLink('cssPrintProp', 'cssProp');
res['syntax-groups']['cssRubyProp'] = SyntaxGroup.FromLink('cssRubyProp', 'cssProp');
res['syntax-groups']['cssSpeechProp'] = SyntaxGroup.FromLink('cssSpeechProp', 'cssProp');
res['syntax-groups']['cssRenderProp'] = SyntaxGroup.FromLink('cssRenderProp', 'cssProp');
res['syntax-groups']['cssAttr'] = SyntaxGroup.FromLink('cssAttr', 'Constant');
res['syntax-groups']['cssContentForPagedMediaAttr'] = SyntaxGroup.FromLink('cssContentForPagedMediaAttr', 'cssAttr');
res['syntax-groups']['cssDimensionAttr'] = SyntaxGroup.FromLink('cssDimensionAttr', 'cssAttr');
res['syntax-groups']['cssGridAttr'] = SyntaxGroup.FromLink('cssGridAttr', 'cssAttr');
res['syntax-groups']['cssHyerlinkAttr'] = SyntaxGroup.FromLink('cssHyerlinkAttr', 'cssAttr');
res['syntax-groups']['cssLineboxAttr'] = SyntaxGroup.FromLink('cssLineboxAttr', 'cssAttr');
res['syntax-groups']['cssMarginAttr'] = SyntaxGroup.FromLink('cssMarginAttr', 'cssAttr');
res['syntax-groups']['cssMarqueeAttr'] = SyntaxGroup.FromLink('cssMarqueeAttr', 'cssAttr');
res['syntax-groups']['cssPaddingAttr'] = SyntaxGroup.FromLink('cssPaddingAttr', 'cssAttr');
res['syntax-groups']['cssPagedMediaAttr'] = SyntaxGroup.FromLink('cssPagedMediaAttr', 'cssAttr');
res['syntax-groups']['cssRubyAttr'] = SyntaxGroup.FromLink('cssRubyAttr', 'cssAttr');
res['syntax-groups']['cssSpeechAttr'] = SyntaxGroup.FromLink('cssSpeechAttr', 'cssAttr');
res['syntax-groups']['cssTransformAttr'] = SyntaxGroup.FromLink('cssTransformAttr', 'cssAttr');
res['syntax-groups']['cssRenderAttr'] = SyntaxGroup.FromLink('cssRenderAttr', 'cssAttr');
res['syntax-groups']['cssPseudoClassLang'] = SyntaxGroup.FromLink('cssPseudoClassLang', 'Constant');
res['syntax-groups']['atKeyword'] = SyntaxGroup.FromLink('atKeyword', 'PreProc');
res['syntax-groups']['cssMedia'] = SyntaxGroup.FromLink('cssMedia', 'atKeyword');
res['syntax-groups']['cssUnicodeRange'] = SyntaxGroup.FromLink('cssUnicodeRange', 'Constant');
res['syntax-groups']['Noise'] = SyntaxGroup.FromColor('Noise', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssLength'] = SyntaxGroup.FromColor('cssLength', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['cssString'] = SyntaxGroup.FromColor('cssString', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlStyleArg'] = SyntaxGroup.FromLink('htmlStyleArg', 'htmlString');
res['syntax-groups']['htmlStatement'] = SyntaxGroup.FromLink('htmlStatement', 'Statement');
res['syntax-groups']['None'] = SyntaxGroup.FromColor('None', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['htmlSpecial'] = SyntaxGroup.FromLink('htmlSpecial', 'Special');
res['syntax-groups']['phpRegion'] = SyntaxGroup.FromColor('phpRegion', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpRegionAsp'] = SyntaxGroup.FromColor('phpRegionAsp', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpRegionSc'] = SyntaxGroup.FromColor('phpRegionSc', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['sqlSpecial'] = SyntaxGroup.FromLink('sqlSpecial', 'Special');
res['syntax-groups']['sqlKeyword'] = SyntaxGroup.FromLink('sqlKeyword', 'sqlSpecial');
res['syntax-groups']['sqlOperator'] = SyntaxGroup.FromLink('sqlOperator', 'sqlStatement');
res['syntax-groups']['sqlStatement'] = SyntaxGroup.FromLink('sqlStatement', 'Statement');
res['syntax-groups']['sqlType'] = SyntaxGroup.FromLink('sqlType', 'Type');
res['syntax-groups']['sqlString'] = SyntaxGroup.FromLink('sqlString', 'String');
res['syntax-groups']['sqlNumber'] = SyntaxGroup.FromLink('sqlNumber', 'Number');
res['syntax-groups']['sqlTodo'] = SyntaxGroup.FromLink('sqlTodo', 'Todo');
res['syntax-groups']['sqlComment'] = SyntaxGroup.FromLink('sqlComment', 'Comment');
res['syntax-groups']['phpEnvVar'] = SyntaxGroup.FromLink('phpEnvVar', 'Identifier');
res['syntax-groups']['phpIntVar'] = SyntaxGroup.FromLink('phpIntVar', 'Identifier');
res['syntax-groups']['phpCoreConstant'] = SyntaxGroup.FromLink('phpCoreConstant', 'Constant');
res['syntax-groups']['phpConstant'] = SyntaxGroup.FromLink('phpConstant', 'Constant');
res['syntax-groups']['phpFunctions'] = SyntaxGroup.FromLink('phpFunctions', 'Function');
res['syntax-groups']['phpMethods'] = SyntaxGroup.FromLink('phpMethods', 'Function');
res['syntax-groups']['phpConditional'] = SyntaxGroup.FromLink('phpConditional', 'Conditional');
res['syntax-groups']['phpRepeat'] = SyntaxGroup.FromLink('phpRepeat', 'Repeat');
res['syntax-groups']['phpLabel'] = SyntaxGroup.FromLink('phpLabel', 'Label');
res['syntax-groups']['phpStatement'] = SyntaxGroup.FromLink('phpStatement', 'Statement');
res['syntax-groups']['phpKeyword'] = SyntaxGroup.FromLink('phpKeyword', 'Statement');
res['syntax-groups']['phpType'] = SyntaxGroup.FromLink('phpType', 'Type');
res['syntax-groups']['phpStructure'] = SyntaxGroup.FromLink('phpStructure', 'Structure');
res['syntax-groups']['phpOperator'] = SyntaxGroup.FromLink('phpOperator', 'Operator');
res['syntax-groups']['phpRelation'] = SyntaxGroup.FromLink('phpRelation', 'Operator');
res['syntax-groups']['phpMemberSelector'] = SyntaxGroup.FromLink('phpMemberSelector', 'Structure');
res['syntax-groups']['phpVarSelector'] = SyntaxGroup.FromLink('phpVarSelector', 'Operator');
res['syntax-groups']['phpIdentifier'] = SyntaxGroup.FromLink('phpIdentifier', 'Identifier');
res['syntax-groups']['phpParent'] = SyntaxGroup.FromLink('phpParent', 'Delimiter');
res['syntax-groups']['phpIdentifierSimply'] = SyntaxGroup.FromLink('phpIdentifierSimply', 'Identifier');
res['syntax-groups']['phpIdentifierComplexP'] = SyntaxGroup.FromColor('phpIdentifierComplexP', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpIdentifierComplex'] = SyntaxGroup.FromColor('phpIdentifierComplex', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpBrackets'] = SyntaxGroup.FromLink('phpBrackets', 'Delimiter');
res['syntax-groups']['phpInterpSimpleError'] = SyntaxGroup.FromLink('phpInterpSimpleError', 'Error');
res['syntax-groups']['phpInterpBogusDollarCurley'] = SyntaxGroup.FromLink('phpInterpBogusDollarCurley', 'Error');
res['syntax-groups']['phpinterpSimpleBracketsInner'] = SyntaxGroup.FromLink('phpinterpSimpleBracketsInner', 'String');
res['syntax-groups']['phpInterpSimpleBrackets'] = SyntaxGroup.FromColor('phpInterpSimpleBrackets', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpInterpSimple'] = SyntaxGroup.FromColor('phpInterpSimple', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpInterpVarname'] = SyntaxGroup.FromLink('phpInterpVarname', 'Identifier');
res['syntax-groups']['phpInterpMethodName'] = SyntaxGroup.FromColor('phpInterpMethodName', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpInterpSimpleCurly'] = SyntaxGroup.FromLink('phpInterpSimpleCurly', 'Delimiter');
res['syntax-groups']['phpInterpDollarCurley1Helper'] = SyntaxGroup.FromColor('phpInterpDollarCurley1Helper', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpInterpDollarCurly1'] = SyntaxGroup.FromLink('phpInterpDollarCurly1', 'Error');
res['syntax-groups']['phpInterpDollarCurley2Helper'] = SyntaxGroup.FromColor('phpInterpDollarCurley2Helper', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpInterpDollarCurly2'] = SyntaxGroup.FromLink('phpInterpDollarCurly2', 'Error');
res['syntax-groups']['phpInterpComplex'] = SyntaxGroup.FromColor('phpInterpComplex', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpMethodsVar'] = SyntaxGroup.FromColor('phpMethodsVar', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpInclude'] = SyntaxGroup.FromLink('phpInclude', 'Include');
res['syntax-groups']['phpDefine'] = SyntaxGroup.FromLink('phpDefine', 'Define');
res['syntax-groups']['phpBoolean'] = SyntaxGroup.FromLink('phpBoolean', 'Boolean');
res['syntax-groups']['phpNumber'] = SyntaxGroup.FromLink('phpNumber', 'Number');
res['syntax-groups']['phpFloat'] = SyntaxGroup.FromLink('phpFloat', 'Float');
res['syntax-groups']['phpBackslashSequences'] = SyntaxGroup.FromLink('phpBackslashSequences', 'SpecialChar');
res['syntax-groups']['phpOctalError'] = SyntaxGroup.FromLink('phpOctalError', 'Error');
res['syntax-groups']['phpBackslashDoubleQuote'] = SyntaxGroup.FromLink('phpBackslashDoubleQuote', 'SpecialChar');
res['syntax-groups']['phpBackslashSingleQuote'] = SyntaxGroup.FromLink('phpBackslashSingleQuote', 'SpecialChar');
res['syntax-groups']['phpTodo'] = SyntaxGroup.FromLink('phpTodo', 'Todo');
res['syntax-groups']['phpComment'] = SyntaxGroup.FromLink('phpComment', 'Comment');
res['syntax-groups']['phpStringDouble'] = SyntaxGroup.FromLink('phpStringDouble', 'String');
res['syntax-groups']['phpBacktick'] = SyntaxGroup.FromLink('phpBacktick', 'String');
res['syntax-groups']['phpStringSingle'] = SyntaxGroup.FromLink('phpStringSingle', 'String');
res['syntax-groups']['phpHereDoc'] = SyntaxGroup.FromColor('phpHereDoc', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpNowDoc'] = SyntaxGroup.FromColor('phpNowDoc', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpException'] = SyntaxGroup.FromLink('phpException', 'Exception');
res['syntax-groups']['phpParentError'] = SyntaxGroup.FromLink('phpParentError', 'Error');
res['syntax-groups']['phpStorageClass'] = SyntaxGroup.FromLink('phpStorageClass', 'StorageClass');
res['syntax-groups']['phpFoldFunction'] = SyntaxGroup.FromColor('phpFoldFunction', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpFoldClass'] = SyntaxGroup.FromColor('phpFoldClass', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpFoldInterface'] = SyntaxGroup.FromColor('phpFoldInterface', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpFoldTry'] = SyntaxGroup.FromColor('phpFoldTry', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpFoldCatch'] = SyntaxGroup.FromColor('phpFoldCatch', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpSCKeyword'] = SyntaxGroup.FromLink('phpSCKeyword', 'StorageClass');
res['syntax-groups']['phpFCKeyword'] = SyntaxGroup.FromLink('phpFCKeyword', 'Define');
res['syntax-groups']['phpFoldHtmlInside'] = SyntaxGroup.FromColor('phpFoldHtmlInside', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpSpecialFunction'] = SyntaxGroup.FromLink('phpSpecialFunction', 'phpOperator');
res['syntax-groups']['phpClasses'] = SyntaxGroup.FromLink('phpClasses', 'phpFunctions');
res['syntax-groups']['phpInterfaces'] = SyntaxGroup.FromLink('phpInterfaces', 'phpConstant');
res['syntax-groups']['phpAssignByRef'] = SyntaxGroup.FromLink('phpAssignByRef', 'Type');
res['syntax-groups']['phpComparison'] = SyntaxGroup.FromLink('phpComparison', 'Statement');
res['syntax-groups']['phpRegionSync'] = SyntaxGroup.FromColor('phpRegionSync', new TermColor(-1), new TermColor(-1));
res['syntax-groups']['phpDocCustomTags'] = SyntaxGroup.FromLink('phpDocCustomTags', 'Type');
res['syntax-groups']['phpDocTags'] = SyntaxGroup.FromLink('phpDocTags', 'PreProc');
res['syntax-groups']['phpDocTodo'] = SyntaxGroup.FromLink('phpDocTodo', 'Todo');
res['syntax-groups']['phpBaselib'] = SyntaxGroup.FromLink('phpBaselib', 'Function');
res['syntax-groups']['phpIdentifierConst'] = SyntaxGroup.FromLink('phpIdentifierConst', 'Delimiter');
return res;
} ())
;
res['snippets'] = [];
res['snippets'].push({
  'title': 'Find Missing Perm',
  'terminal-contents': '&lt;?php</v><v-normal>                                                                           </v-normal>\n<vphp-var-selector>$</vphp-var-selector><vphp-identifier>finalres</vphp-identifier><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-type>Array</vphp-type><vphp-parent>()</vphp-parent><vphp-region>;</vphp-region><v-normal>                                                            </v-normal>\n<vphp-define>function</vphp-define><vphp-region> permut</vphp-region><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>arr</vphp-identifier><vphp-region>,</vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>result</vphp-identifier><vphp-operator>=</vphp-operator><vphp-type>array</vphp-type><vphp-parent>()){</vphp-parent><v-normal>                                          </v-normal>\n<vphp-region>        </vphp-region><vphp-storage-class>global</vphp-storage-class><vphp-region>  </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>finalres</vphp-identifier><vphp-region>;</vphp-region><v-normal>                                                      </v-normal>\n<vphp-region>        </vphp-region><vphp-conditional>if</vphp-conditional><vphp-parent>(</vphp-parent><vphp-special-function>empty</vphp-special-function><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>arr</vphp-identifier><vphp-parent>)){</vphp-parent><v-normal>                                                        </v-normal>\n<vphp-region>                </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>finalres</vphp-identifier><vphp-parent>[]</vphp-parent><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-functions>implode</vphp-functions><vphp-parent>(</vphp-parent><v-none>&quot;&quot;</v-none><vphp-region>,</vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>result</vphp-identifier><vphp-parent>)</vphp-parent><vphp-region>;</vphp-region><v-normal>                              </v-normal>\n<vphp-region>        </vphp-region><vphp-parent>}</vphp-parent><vphp-conditional>else</vphp-conditional><vphp-parent>{</vphp-parent><v-normal>                                                                  </v-normal>\n<vphp-region>                </vphp-region><vphp-repeat>foreach</vphp-repeat><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>arr</vphp-identifier><vphp-region> </vphp-region><vphp-repeat>as</vphp-repeat><vphp-region> </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>key</vphp-identifier><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-relation>&gt;</vphp-relation><vphp-region> </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>val</vphp-identifier><vphp-parent>){</vphp-parent><v>&gt;</v><v-normal> </v-normal><v>$val){</v><v-normal>                          </v-normal>\n<vphp-region>                        </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>newArr</vphp-identifier><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>arr</vphp-identifier><vphp-region>;</vphp-region><v-normal>                                         </v-normal>\n<vphp-region>                        </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>newres</vphp-identifier><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>result</vphp-identifier><vphp-region>;</vphp-region><v-normal>                                      </v-normal>\n<vphp-region>                        </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>newres</vphp-identifier><vphp-parent>[]</vphp-parent><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>val</vphp-identifier><vphp-region>;</vphp-region><v-normal>                                       </v-normal>\n<vphp-region>                        </vphp-region><vphp-special-function>unset</vphp-special-function><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>newArr</vphp-identifier><vphp-parent>[</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>key</vphp-identifier><vphp-parent>])</vphp-parent><vphp-region>;</vphp-region><v-normal>                                   </v-normal>\n<vphp-region>                        permut</vphp-region><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>newArr</vphp-identifier><vphp-region>,</vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>newres</vphp-identifier><vphp-parent>)</vphp-parent><vphp-region>;                </vphp-region><v-normal>                </v-normal>\n<vphp-region>                </vphp-region><vphp-parent>}</vphp-parent><v-normal>                                                               </v-normal>\n<vphp-region>        </vphp-region><vphp-parent>}</vphp-parent><v-normal>                                                                       </v-normal>\n<vphp-parent>}</vphp-parent><v-normal>                                                                               </v-normal>\n<vphp-var-selector>$</vphp-var-selector><vphp-identifier>givenPerms</vphp-identifier><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-type>Array</vphp-type><vphp-parent>(</vphp-parent><v-none>&quot;</v-none><vphp-string-double>ABCD</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>CABD</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>ACDB</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>DACB</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>BCDA</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>ACBD</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>ADCB</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>CDAB</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>DAB</vphp-string-double>\n<vphp-string-double>C</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>BCAD</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>CADB</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>CDBA</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>CBAD</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>ABDC</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>ADBC</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>BDCA</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>DCBA</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>BACD</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>BADC</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>BDAC</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region>\n<v-none>&quot;</v-none><vphp-string-double>CBDA</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>DBCA</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>DCAB</vphp-string-double><v-none>&quot;</v-none><vphp-parent>)</vphp-parent><vphp-region>;</vphp-region><v-normal>                                                          </v-normal>\n<vphp-var-selector>$</vphp-var-selector><vphp-identifier>given</vphp-identifier><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-type>Array</vphp-type><vphp-parent>(</vphp-parent><v-none>&quot;</v-none><vphp-string-double>A</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>B</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>C</vphp-string-double><v-none>&quot;</v-none><vphp-region>,</vphp-region><v-none>&quot;</v-none><vphp-string-double>D</vphp-string-double><v-none>&quot;</v-none><vphp-parent>)</vphp-parent><vphp-region>;</vphp-region><v-normal>                                                </v-normal>\n<vphp-region>permut</vphp-region><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>given</vphp-identifier><vphp-parent>)</vphp-parent><vphp-region>;</vphp-region><v-normal>                                                                 </v-normal>\n<vphp-functions>print_r</vphp-functions><vphp-parent>(</vphp-parent><vphp-functions>array_diff</vphp-functions><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>finalres</vphp-identifier><vphp-region>,</vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>givenPerms</vphp-identifier><vphp-parent>))</vphp-parent><vphp-region>; </vphp-region><vphp-comment>// Array ( [20] =&gt; DBAC ) </vphp-comment><v> ) </v><v-normal>       </v-normal>\n<v-non-text>~                                                                               </v-non-text>\n<v-normal>                                                                                </v-normal>\n'
});
res['snippets'].push({
  'title': 'File Input/Output',
  'terminal-contents': '&lt;?php</v><v-normal>                                                                           </v-normal>\n<vphp-conditional>if</vphp-conditional><vphp-region> </vphp-region><vphp-parent>(</vphp-parent><vphp-var-selector>$</vphp-var-selector><vphp-identifier>contents</vphp-identifier><vphp-region> </vphp-region><vphp-operator>=</vphp-operator><vphp-region> </vphp-region><vphp-functions>file_get_contents</vphp-functions><vphp-parent>(</vphp-parent><v-none>&apos;</v-none><vphp-string-single>input.txt</vphp-string-single><v-none>&apos;</v-none><vphp-parent>))</vphp-parent><vphp-region> </vphp-region><vphp-parent>{</vphp-parent><v-normal>                               </v-normal>\n<vphp-region>    </vphp-region><vphp-conditional>if</vphp-conditional><vphp-region> </vphp-region><vphp-parent>(</vphp-parent><vphp-operator>!</vphp-operator><vphp-functions>file_put_contents</vphp-functions><vphp-parent>(</vphp-parent><v-none>&apos;</v-none><vphp-string-single>output.txt</vphp-string-single><v-none>&apos;</v-none><vphp-region>, </vphp-region><vphp-var-selector>$</vphp-var-selector><vphp-identifier>contents</vphp-identifier><vphp-parent>))</vphp-parent><vphp-region> </vphp-region><vphp-parent>{</vphp-parent><v-normal>                          </v-normal>\n<vphp-region>        </vphp-region><vphp-define>echo</vphp-define><vphp-parent>(</vphp-parent><v-none>&apos;</v-none><vphp-string-single>Could not write output file.</vphp-string-single><v-none>&apos;</v-none><vphp-parent>)</vphp-parent><vphp-region>;</vphp-region><v-normal>                                   </v-normal>\n<vphp-region>    </vphp-region><vphp-parent>}</vphp-parent><v-normal>                                                                           </v-normal>\n<vphp-parent>}</vphp-parent><vphp-region> </vphp-region><vphp-conditional>else</vphp-conditional><vphp-region> </vphp-region><vphp-parent>{</vphp-parent><v-normal>                                                                        </v-normal>\n<vphp-region>    </vphp-region><vphp-define>echo</vphp-define><vphp-parent>(</vphp-parent><v-none>&apos;</v-none><vphp-string-single>Could not open input file.</vphp-string-single><v-none>&apos;</v-none><vphp-parent>)</vphp-parent><vphp-region>;</vphp-region><v-normal>                                         </v-normal>\n<vphp-parent>}</vphp-parent><v-normal>                                                                               </v-normal>\n?&gt;</v><v-normal>                                                                              </v-normal>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-non-text>~                                                                               </v-non-text>\n<v-normal>                                                                                </v-normal>\n'
});
return res;
}())